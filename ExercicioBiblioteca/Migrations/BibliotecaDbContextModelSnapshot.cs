// <auto-generated />
using System;
using ExercicioBiblioteca.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExercicioBiblioteca.Migrations
{
    [DbContext(typeof(BibliotecaDbContext))]
    partial class BibliotecaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExercicioBiblioteca.Models.Autor", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("autores");
                });

            modelBuilder.Entity("ExercicioBiblioteca.Models.Emprestimo", b =>
                {
                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoLeitor")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDevolucao")
                        .HasColumnName("datetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnName("datetime")
                        .HasColumnType("datetime2");

                    b.HasKey("Numero");

                    b.HasIndex("CodigoLeitor");

                    b.ToTable("emprestimos");
                });

            modelBuilder.Entity("ExercicioBiblioteca.Models.ItensEmprestimo", b =>
                {
                    b.Property<int>("CodigoItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoLivro")
                        .HasColumnType("int");

                    b.Property<int>("NumeroEmprestimo")
                        .HasColumnType("int");

                    b.HasKey("CodigoItem");

                    b.HasIndex("CodigoLivro");

                    b.HasIndex("NumeroEmprestimo");

                    b.ToTable("emprestimos_itens");
                });

            modelBuilder.Entity("ExercicioBiblioteca.Models.Leitor", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CPF")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("VARCHAR(60)")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(15)");

                    b.HasKey("Codigo");

                    b.ToTable("leitores");
                });

            modelBuilder.Entity("ExercicioBiblioteca.Models.Livro", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnoLancamento")
                        .HasColumnType("int");

                    b.Property<int>("CodigoAutor")
                        .HasColumnType("int");

                    b.Property<string>("CodigoEditora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)");

                    b.Property<int>("ISBN")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoAutor");

                    b.ToTable("livros");
                });

            modelBuilder.Entity("ExercicioBiblioteca.Models.Emprestimo", b =>
                {
                    b.HasOne("ExercicioBiblioteca.Models.Leitor", "Leitor")
                        .WithMany()
                        .HasForeignKey("CodigoLeitor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExercicioBiblioteca.Models.ItensEmprestimo", b =>
                {
                    b.HasOne("ExercicioBiblioteca.Models.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("CodigoLivro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExercicioBiblioteca.Models.Emprestimo", "Emprestimo")
                        .WithMany()
                        .HasForeignKey("NumeroEmprestimo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExercicioBiblioteca.Models.Livro", b =>
                {
                    b.HasOne("ExercicioBiblioteca.Models.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("CodigoAutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
